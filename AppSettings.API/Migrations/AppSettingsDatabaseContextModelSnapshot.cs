// <auto-generated />
using System;
using AppSettings.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppSettings.API.Migrations
{
    [DbContext(typeof(AppSettingsDatabaseContext))]
    partial class AppSettingsDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppSettings.API.Models.AppSettingAuthentication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettingAuthentication");
                });

            modelBuilder.Entity("AppSettings.API.Models.AppSettingDatabaseResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppSettingAuthenticationId")
                        .HasColumnType("int");

                    b.Property<int?>("AppSettingDataDescriptorId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Base64RawString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PluginContainerId")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserObject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppSettingAuthenticationId");

                    b.HasIndex("AppSettingDataDescriptorId");

                    b.HasIndex("PluginContainerId");

                    b.ToTable("AppSettingDataObjects");
                });

            modelBuilder.Entity("AppSettings.API.Models.AppSettingResponseDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppSettingDataObjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLastWrite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastRead")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("MediaType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettingDataDescriptor");
                });

            modelBuilder.Entity("AppSettings.API.Models.PluginContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("PluginContainer");
                });

            modelBuilder.Entity("AppSettings.API.Models.PluginParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PluginParametersId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PluginParametersId");

                    b.ToTable("PluginParameter");
                });

            modelBuilder.Entity("AppSettings.API.Models.PluginParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PluginContainerId")
                        .HasColumnType("int");

                    b.Property<string>("PluginKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PluginContainerId");

                    b.ToTable("PluginParameters");
                });

            modelBuilder.Entity("AppSettings.API.Models.AppSettingDatabaseResponse", b =>
                {
                    b.HasOne("AppSettings.API.Models.AppSettingAuthentication", "AppSettingAuthentication")
                        .WithMany()
                        .HasForeignKey("AppSettingAuthenticationId");

                    b.HasOne("AppSettings.API.Models.AppSettingResponseDetails", "AppSettingDataDescriptor")
                        .WithMany()
                        .HasForeignKey("AppSettingDataDescriptorId");

                    b.HasOne("AppSettings.API.Models.PluginContainer", "PluginContainer")
                        .WithMany()
                        .HasForeignKey("PluginContainerId");
                });

            modelBuilder.Entity("AppSettings.API.Models.PluginParameter", b =>
                {
                    b.HasOne("AppSettings.API.Models.PluginParameters", null)
                        .WithMany("Parameters")
                        .HasForeignKey("PluginParametersId");
                });

            modelBuilder.Entity("AppSettings.API.Models.PluginParameters", b =>
                {
                    b.HasOne("AppSettings.API.Models.PluginContainer", null)
                        .WithMany("Plugins")
                        .HasForeignKey("PluginContainerId");
                });
#pragma warning restore 612, 618
        }
    }
}
